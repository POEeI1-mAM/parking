<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
	省去Dao实现类,满足以下条件:
	~namespace必须是dao的包名+接口名
	~sql语句的id必须和方法名一样
	~sql语句的参数类型必须和方法的参数类型一致
	~sql语句的返回值类型必须和方法的返回值类型一致
 -->
<mapper namespace="com.carlinfo.parking.orders.dao.IAOrdersDao">
	<!-- 配置关联关系到 -->
	<resultMap type="com.carlinfo.parking.orders.pojo.AOrders" id="resultMap">
		<result column="userId" property="userId"/>
		<!-- 用户 -->
		<collection property="users" column="userId" javaType="com.carlinfo.parking.users.pojo.AUsers"
			select="com.carlinfo.parking.users.dao.IAUsersDao.selectById"/>
	</resultMap>
	<!-- 保存一条记录;记着:要返回主键 -->
	<insert id="saveOne" parameterType="com.carlinfo.parking.orders.pojo.AOrders" 
		useGeneratedKeys="true" keyColumn="id" keyProperty="id">
		INSERT INTO parking.order (userId, userName, vehId, ordersn, payType, paySn, vehName, 
		parkingName, price, time, charge, content, intTime, outTime, status, 
		createTime, updateTime, payTime) 
		VALUES 
		(#{userId}, #{userName}, #{vehId}, #{ordersn}, #{payType}, #{paySn}, #{vehName}, #{
		parkingName}, #{price}, #{time}, #{charge}, #{content}, #{intTime}, #{outTime}, #{status}, #{
		createTime}, #{updateTime}, #{payTime})
	</insert>
	
	<!-- 更新一条记录 -->
	<update id="updateOne" parameterType="com.carlinfo.parking.orders.pojo.AOrders" >
		update order 
		<set>
			userId=#{userId},userName=#{userName},vehId=#{vehId},ordersn=#{ordersn},payType=#{payType},paySn=#{paySn},vehName=#{vehName},
			parkingName=#{parkingName},price=#{price},time=#{time},charge=#{charge},content=#{content},intTime=#{intTime},outTime=#{outTime},status=#{status},
			createTime=#{createTime},updateTime=#{updateTime},payTime=#{payTime}
		</set>
		<where>
			id = #{id} 
		</where>
	</update>

	<!-- 根据id查询记录 -->
	<select id="findOne" parameterType="map" resultMap="resultMap">
		select * from `order`
		<where>
			<choose>
				<otherwise>
					id = #{id} 
				</otherwise>
			</choose>
		</where>
	</select>
	
	<!-- 查询多条记录 -->
	<select id="findCondList" parameterType="map" resultMap="resultMap">
		select * from `order` 
		<where>
			<!-- 当参数类型为map是,#{map的键},条件的判断也指的是map的键 -->
			<!-- 只有是字符串的时候才能加上!= ''的判断 -->
			<if test="keyword != null and keyword != ''">
				and ( usersName like #{keyword} )
			</if>
			<if test="status != null">
				and status = #{status} 
			</if>
			<if test="stDate != null and edDate != null">
				<!--  如果XML有特殊含义的标签,要用CDATA转换 -->
				<![CDATA[
					and createTime >= #{stDate} and createTime < #{edDate}
				]]>
			</if>
		</where>
		<!-- 排序 -->
		<choose>
			<when test="orderBy == 'idDesc'">
				order by id desc 
			</when>
			<otherwise>
				order by createTime desc 
			</otherwise>
		</choose>
	</select>
	
	<!-- 删除一条记录 -->
	<delete id="deleteOne" parameterType="map">
		delete from `order`
		<where>
			id = #{id} 
		</where>
	</delete>
	<!-- 按照id查询管理员 -->
	<select id="selectById" parameterType="map" resultType="com.carlinfo.parking.orders.pojo.AOrders">
		select * from `order` where id = #{id}
	</select>
	
</mapper>